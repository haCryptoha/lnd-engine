FROM golang:1.10-alpine as builder

LABEL owner="Olaoluwa Osuntokun <lightning.engineering>"
LABEL maintainer="Danny Paz <kinesis.exchange>"

# Force Go to use the cgo based DNS resolver. This is required to ensure DNS
# queries required to connect to linked containers succeed.
ENV GODEBUG netdns=cgo

# Install dependencies and install/build lnd.
RUN apk add --no-cache \
    git \
    make \
    openssl \
&&  go get -d github.com/lightningnetwork/lnd \
&&  cd $GOPATH/src/github.com/lightningnetwork/lnd \
&&  make \
&&  make install

# Generate certs for NodeJS gRPC
# NOTE: "Beware that lnd autogenerated certificates are not compatible with current
# NodeJS gRPC module implementation. Lnd uses the P-521 curve for its certificates
# but NodeJS gRPC module is only compatible with certificates using the P-256 curve"
#
# More info here: https://github.com/mably/lncli-web#generate-lnd-certificates-compatible-with-nodejs-grpc
#
RUN mkdir "/secure"

ARG TLS_KEY='/secure/lnd-engine-tls.key'
ARG TLS_CERT='/secure/lnd-engine-tls.cert'
ARG TLS_CSR='/secure/lnd-engine-csr.csr'

# Certs that are generated for using the lncli locally
ARG LOCAL_TLS_KEY='/secure/lnd-engine-tls.key'
ARG LOCAL_TLS_CERT='/secure/lnd-engine-tls.local.cert'
ARG LOCAL_TLS_CSR='/secure/lnd-engine-csr.local.csr'

# # Manually generate certificate and add all domains, it is needed to connect
# # "btcctl" and "lnd" to "btcd" over docker links.
RUN openssl ecparam -genkey -name prime256v1 -out ${TLS_KEY}
RUN openssl req -new -sha256 -key ${TLS_KEY} -out ${TLS_CSR} -subj '/CN=lnd_btc/O=lnd'
RUN openssl req -new -sha256 -key ${TLS_KEY} -out ${LOCAL_TLS_CSR} -subj '/CN=localhost/O=lnd'
RUN openssl req -x509 -sha256 -days 36500 -key ${TLS_KEY} -in ${TLS_CSR} -out ${TLS_CERT}
RUN openssl req -x509 -sha256 -days 36500 -key ${TLS_KEY} -in ${LOCAL_TLS_CSR} -out ${LOCAL_TLS_CERT}

RUN rm ${TLS_CSR}
RUN rm ${LOCAL_TLS_CSR}

# Start a new, final image to reduce size.
FROM alpine as final

RUN mkdir "/secure"

ARG TLS_KEY='/secure/lnd-engine-tls.key'
ARG TLS_CERT='/secure/lnd-engine-tls.cert'
ARG LOCAL_TLS_CERT='/secure/lnd-engine-tls.local.cert'

# Copy the binaries and entrypoint from the builder image.
COPY --from=builder /go/bin/lncli /bin/
COPY --from=builder /go/bin/lnd /bin/
COPY --from=builder ${TLS_KEY} /secure/
COPY --from=builder ${TLS_CERT} /secure/
COPY --from=builder ${LOCAL_TLS_CERT} /secure/

# Add bash.
RUN apk add --no-cache \
    bash

# Create a volume to house lnd certs/keys.
# You should NOT do this before certificate generation!
# Otherwise manually generated certificate will be overridden with shared
# mounted volume! For more info read dockerfile "VOLUME" documentation.
VOLUME ["/secure"]

# Make lnd folder default.
WORKDIR /home/lnd

COPY "lnd/start-lnd.sh" .
RUN chmod +x start-lnd.sh
